@page "/"

<h1>Hello, world!</h1>

Welcome to your new app. 
<button @onclick=@ChangeData>Change Data</button>

<ol>
    @foreach(string item in Items)
    {
        <li>@item</li>
    }
</ol>

<SurveyPrompt Title = "How is Blazor working for you? " />

@code 
{
    List<string> Items = new List<string> {"One", "Two", "3"}; 
    void ChangeData()
    {
        Items[0] = "1"; 
        Items[1] = "2"; 
        Items.Add("4"); 
    }
}

<div class="text-center jumbotron">
    <h1>Responsive layout</h1>
</div>

<div class="container">
    <div class="row">
        <div class="col-sm-6 col-xs-12 btn btn-default">
            Column 1
        </div>
        <div class="col-sm-6 col-xs-12 btn btn-default">
            Column 2
        </div>
    </div>
</div>


<div>
    <input type="checkbox" @bind=UseInvokeAsync id="UseInvokeAsyncCheckbox" />
    <label for="UseInvokeAsyncCheckbox">Use InvokeAsync</label>
</div>
<div>
    <button @onclick=Start disabled=@IsWorking>Start</button>
</div>
<ShowCounterValue />
@if (IsWorking)
{
    for (int i = 0; i < 5; i++)
    {
        <IncrementCounter Trigger=@Trigger ShouldUseInvokeAsync=@UseInvokeAsync />
    }
}

@code
{
    private bool IsWorking;
    private bool UseInvokeAsync;
    private System.Threading.ManualResetEvent Trigger = new System.Threading.ManualResetEvent(false);

    private async Task Start()
    {
        CounterState.Value = 0;
        IsWorking = true;
        StateHasChanged();

        await Task.Delay(500);
        Trigger.Set();

        await Task.Delay(1000);
        IsWorking = false;
        Trigger.Reset();
    }
}
